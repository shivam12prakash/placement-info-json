{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Desktop\\\\BASIC CRUD\\\\crud-app\\\\src\\\\components\\\\Users.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Table, TableHead, TableRow, TableCell, TableBody, makeStyles } from \"@material-ui/core\";\nimport { getUsers } from \"../Service/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    width: '90%',\n    margin: '50px 0 0 50px'\n  },\n  thead: {\n    '& > *': {\n      background: '#0000000',\n      color: '#FFFFFF',\n      fontSize: 20\n    }\n  },\n  row: {\n    '& > *': {\n      fontSize: 20\n    }\n  }\n});\n\nconst Users = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n\n  const getAllUsers = async () => {\n    const response = await getUsers();\n    console.log(response.data);\n    setUsers(response.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    className: classes.table,\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(TableRow, {\n        classes: classes.thead,\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Registration Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Branch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"CGPA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n        className: classes.row,\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: user.regNo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: user.Branch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: user.GPA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: user.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Users, \"zJU2LrxdHkoSRuavN0EHKoSiJhc=\", false, function () {\n  return [useStyles];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["C:/Users/shiva/Desktop/BASIC CRUD/crud-app/src/components/Users.jsx"],"names":["useEffect","useState","Table","TableHead","TableRow","TableCell","TableBody","makeStyles","getUsers","useStyles","table","width","margin","thead","background","color","fontSize","row","Users","users","setUsers","classes","getAllUsers","response","console","log","data","map","user","regNo","name","Branch","email","GPA","phone"],"mappings":"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","sourcesContent":["import { useEffect,useState } from \"react\";\r\nimport { Table,TableHead,TableRow,TableCell,TableBody,makeStyles } from \"@material-ui/core\";\r\nimport { getUsers } from \"../Service/api\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        width: '90%',\r\n        margin: '50px 0 0 50px'\r\n    },\r\n    thead: {\r\n        '& > *': {\r\n            background: '#0000000',\r\n            color: '#FFFFFF',\r\n            fontSize: 20\r\n        }\r\n    },\r\n    row: {\r\n        '& > *': {\r\n            fontSize: 20\r\n        }\r\n    }\r\n})\r\n\r\n\r\nconst Users = () => {\r\n\r\n    const [users,setUsers] = useState([]);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        getAllUsers();\r\n    }, [])\r\n\r\n    const getAllUsers = async() => {\r\n        const response = await getUsers();\r\n        console.log(response.data);\r\n        setUsers(response.data);\r\n    }\r\n\r\n\r\n    return (\r\n        <Table className={classes.table}>\r\n            <TableHead>\r\n                <TableRow classes={classes.thead}>\r\n                    <TableCell>Registration Number</TableCell>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Branch</TableCell>\r\n                    <TableCell>Email</TableCell>\r\n                    <TableCell>CGPA</TableCell>\r\n                    <TableCell>phone</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {\r\n                    users.map(user => (\r\n                        <TableRow className={classes.row}>\r\n                            <TableCell>{user.regNo}</TableCell>\r\n                            <TableCell>{user.name}</TableCell>\r\n                            <TableCell>{user.Branch}</TableCell>\r\n                            <TableCell>{user.email}</TableCell>\r\n                            <TableCell>{user.GPA}</TableCell>\r\n                            <TableCell>{user.phone}</TableCell>\r\n                        </TableRow>\r\n                    ))\r\n                }\r\n            </TableBody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default Users;"]},"metadata":{},"sourceType":"module"}